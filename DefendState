DefendState

using Brain;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;

namespace Assets.Scripts.FSM.States
{

    [CreateAssetMenu(fileName = "DefendState", menuName = "FSM/States/Defend", order = 3)]
    public class DefendState : AbstractFSMState
    {
        public override void OnEnable()
        {
            base.OnEnable();
            StateType = FSMStateType.DEFEND;
        }

        public override bool EnterState()
        {
            EnteredState = false;
            if (base.EnterState())
            {
                // start function of entered state.
                Debug.Log("Defend State entered.");
                EnteredState = true;
            }
            return EnteredState;
        }


        public override void UpdateState()
        {
            // need to make sure we have entered the state

            if (EnteredState)
            {
                Debug.Log("in Defend state");

                // running the Defend tree and then Analysing the armies.
                Debug.Log("Running Defend tree");
                GameObject AIBrainATs = GameObject.Find("AI Brain");
                AISBrain AIBrain = (AISBrain)AIBrainATs.GetComponent(typeof(AISBrain));
                AIBrain.RunDefendTree();
                AIBrain.AnalyseArmies();
                //once it has done this it will then enter the decision state
                _fsm.EnterState(FSMStateType.DECISION);
              

            }

        }
        public override bool ExitState()
        {
            base.ExitState();

            Debug.Log("Exiting Defend state");
            return true;
        }
    }
}

