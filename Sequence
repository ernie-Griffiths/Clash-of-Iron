
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Sequence : Node
{

    protected List<Node> nodes = new List<Node>();

    public Sequence(List<Node> nodes)
    {
        this.nodes = nodes;
    }

    // a node that allows two nodes to act in Sequence based on the its child nodes.
    public override NodeState Evaluate()
    {
        // checks the nodes bellow and runns the ones that return in success.
        bool IsChildRunning = false;
        foreach (var node in nodes)
        {
            switch (node.Evaluate())
            {
                case NodeState.Running:
                    IsChildRunning = true;
                    break;
                case NodeState.Success:
                    break;
                case NodeState.Failure:
                    _nodeState = NodeState.Failure;
                    return _nodeState;
                default:
                    break;
            }
        }
        _nodeState = IsChildRunning ? NodeState.Running : NodeState.Success;
       return _nodeState;
    }
}


